{
    /*
     * Change behavior of the status bar message
     *
     * If set to "fancy", SublimeGit will show a message like
     * "on <branch><dirty> in <repo>". If set to "simple"
     * the status message will be "on <branch>".
     *
     * Set to false to completely disable the status bar (might
     * be necessary for performance reasons on huge projects).
     */
    "git_status_bar": false,
    "git_show_status_help": false,
    "git_help_fancy_list": false,
    /*
     * Verbose commit messages
     *
     * If set to true, the diff output for the current commit
     * will be shown below the commit overview when writing a
     * commit message.
     */
    "git_commit_verbose": true,
    /*
     * Pedantic commit messages
     *
     * The style guide for commit messages dictate that:
     *  - The first line should be max 50 chars
     *  - The second line should be empty
     *  - Subsequent lines should be max 72 chars
     *
     * If this setting is true, SublimeGit will mark these
     * errors with an icon in the gutter, and different color
     * text for the offending lines.
     */
    "git_commit_pedantic": true,
    /*
     * Extra merge flags to use when running Git: Merge
     *
     * By default, git merge is run like this:
     *
     *  git merge --no-progress <branch>
     *
     * If you want to add something like "--no-ff", set this
     * value to ["--no-ff"]. Then the command run will be
     *
     *  git merge --no-progress --no-ff <branch>
     *
     * It is possible to add several options, using the default
     * list syntax like so:
     *
     *  "git_merge_flags": ["--no-ff", "--strategy=ours"]
     *
     */
     "git_merge_flags": ["--no-ff"],
    /*
     * Forced path
     *
     * If you are having issues with the path (especially on OS X),
     * you can use this setting to force a path instead of having
     * Sublime Text take it from the environment.
     *
     * It can be specified either as a string or as an array. If
     * specified as an array, it will be concat'ed with the appropriate
     * path separator for the platform. Examples:
     *
     * ['/usr/local/bin', '/usr/bin', '/bin']
     * "/usr/local/bin:/usr/bin:/bin"
     *
     */
     "git_force_path": ["/usr/local/bin"],
     /*
      * Extensions
      *
      * SublimeGit ships with extensions for:
      *
      *  - git-flow (https://github.com/nvie/gitflow)
      *  - legit (http://www.git-legit.org/)
      *  - hub (https://github.com/defunkt/hub)
      *
      * To enable or disable these extensions set these
      * settings to true/false. If an extension is disabled,
      * its commands will not show up in your command
      * palette.
      *
      * Requires a restart of Sublime Text to take effect.
      */
     "git_extensions": {
         "git_flow": false,
         "legit": false
     }
}
